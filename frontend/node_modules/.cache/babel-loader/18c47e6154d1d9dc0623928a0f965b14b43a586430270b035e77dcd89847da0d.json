{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  console.error('API Error:', error);\n  if (error.response) {\n    throw new Error(error.response.data.detail || 'API request failed');\n  } else if (error.request) {\n    throw new Error('Network error - please check your connection');\n  } else {\n    throw new Error('Request configuration error');\n  }\n});\n\n// API functions\nexport const fetchCompanies = async () => {\n  try {\n    const response = await api.get('/companies/');\n    return response;\n  } catch (error) {\n    console.error('Error fetching companies:', error);\n    throw error;\n  }\n};\nexport const fetchCompany = async symbol => {\n  try {\n    const response = await api.get(`/companies/${symbol}`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching company:', error);\n    throw error;\n  }\n};\nexport const fetchStockData = async (symbol, days = 30) => {\n  try {\n    const response = await api.get(`/stocks/${symbol}/historical?days=${days}`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching stock data:', error);\n    throw error;\n  }\n};\nexport const fetchStockInfo = async symbol => {\n  try {\n    const response = await api.get(`/stocks/${symbol}/info`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching stock info:', error);\n    throw error;\n  }\n};\nexport const fetchPrediction = async symbol => {\n  try {\n    const response = await api.get(`/predictions/${symbol}/predict`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching prediction:', error);\n    throw error;\n  }\n};\nexport const fetchPredictionHistory = async symbol => {\n  try {\n    const response = await api.get(`/predictions/${symbol}/history`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching prediction history:', error);\n    throw error;\n  }\n};\n\n// Health check\nexport const checkApiHealth = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL.replace('/api', '')}/health`);\n    return response.data.status === 'healthy';\n  } catch (error) {\n    return false;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","data","Error","detail","fetchCompanies","get","fetchCompany","symbol","fetchStockData","days","fetchStockInfo","fetchPrediction","fetchPredictionHistory","checkApiHealth","replace","status"],"sources":["/Users/bendivivekvardhan/vv_031_project_JarNox/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    console.error('API Error:', error);\n    if (error.response) {\n      throw new Error(error.response.data.detail || 'API request failed');\n    } else if (error.request) {\n      throw new Error('Network error - please check your connection');\n    } else {\n      throw new Error('Request configuration error');\n    }\n  }\n);\n\n// API functions\nexport const fetchCompanies = async () => {\n  try {\n    const response = await api.get('/companies/');\n    return response;\n  } catch (error) {\n    console.error('Error fetching companies:', error);\n    throw error;\n  }\n};\n\nexport const fetchCompany = async (symbol) => {\n  try {\n    const response = await api.get(`/companies/${symbol}`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching company:', error);\n    throw error;\n  }\n};\n\nexport const fetchStockData = async (symbol, days = 30) => {\n  try {\n    const response = await api.get(`/stocks/${symbol}/historical?days=${days}`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching stock data:', error);\n    throw error;\n  }\n};\n\nexport const fetchStockInfo = async (symbol) => {\n  try {\n    const response = await api.get(`/stocks/${symbol}/info`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching stock info:', error);\n    throw error;\n  }\n};\n\nexport const fetchPrediction = async (symbol) => {\n  try {\n    const response = await api.get(`/predictions/${symbol}/predict`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching prediction:', error);\n    throw error;\n  }\n};\n\nexport const fetchPredictionHistory = async (symbol) => {\n  try {\n    const response = await api.get(`/predictions/${symbol}/history`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching prediction history:', error);\n    throw error;\n  }\n};\n\n// Health check\nexport const checkApiHealth = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL.replace('/api', '')}/health`);\n    return response.data.status === 'healthy';\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}